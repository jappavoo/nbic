#!/bin/bash

NAME=cpio-fsck
VERSION=0.2.1

function help()
{
    echo -e "\`$NAME' checks a cpio against its reference directory\n" \
	    "\n"                                                       \
	    "Usage: $NAME CPIO\n"                                      \
	    " -?, --help      Show this help statement\n"              \
	    "     --version   Show version statement\n"                \
	    "\n"                                                       \
	    "Examples: $NAME foo.cpio foo\n";
}

function work()
{
    local cpio=$1;
    local dir=$2;
    local tmp=$(mktemp -d dir.XXXXXX)
    local bad=$(mktemp bad.XXXXXX)
    local good=$(mktemp good.XXXXXX)
    local sums=$(mktemp sums.XXXXXX)

    cpio-unpack -f $cpio -d $tmp ||
    return 1;

    cd $tmp &&
    sudo find * -type f > ../$bad &&
    xargs --arg-file ../$bad md5sum > ../$sums &&
    cd $OLDPWD &&
    sudo rm -r -f $tmp &&
    rm $bad $good &&
    cd $dir &&    
    md5sum -c ../$sums &&
    cd $OLDPWD &&
    rm $sums ||
    return 1;

    return 0;
}

function main()
{
    local cpio;
    local dir;

    while [ $# -gt 0 ]; do
        case $1 in
        -\? | --help)
            help; return 1;
            ;;
        --version)
            echo "$NAME $VERSION"; return 1;
            ;;
        *)
            if [ -z "$cpio" ]; then
	    	cpio=$1;
            elif [ -z "$dir" ]; then
	    	dir=$1;
	    else
	        echo "$NAME: too many arguments: $1";
		return 1;
	    fi
	    shift;
            ;;
        esac
    done
   
    [ -f "$cpio" -a -d "$dir" ] || {
    	help;
	return 1;
    }

    work "$cpio" "$dir" || { 
    	echo "$NAME: bailing out because of errors";
	return 1;
    }

    return 0;
}

main "$@";
exit $?;
