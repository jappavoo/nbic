#!/bin/bash

NAME=disk-cpio

function help()
{
    echo -e "\`$NAME' unpacks a cpio image onto a disk image\n"               \
	    "\n"                                                              \
	    "Usage: $NAME CPIO DISK\n"                                        \
	    " -?, --help      Show this help statement\n"                     \
	    "     --version   Show version statement\n"                       \
	    "\n"                                                              \
	    "Examples: $NAME alpha.cpio beta.img\n"                           \
	    "          $NAME alpha.cpio beta.vmdk\n"                          \
	    "\n"                                                              \
	    "Notes: VMWare images undergo internal conversion to qemu images\n";
}

function work()
{
    local cpio=$1;
    local disk=$2;

    local dir=$(mktemp -d 000.$NAME.XXXXXX);

    test -d "$dir" &&
    sudo mount -o loop,offset=32256 $disk $dir &&
    cpio-unpack -f $cpio -d $dir &&
    sudo umount $dir &&
    rmdir $dir ||
    return 1;

    return 0;
}

function main()
{
    local cpio;
    local disk;

    while [ $# -gt 0 ]; do
        case $1 in
        -\? | --help)
            help; return 1;
            ;;
        --version)
            nbic --version; return 1;
            ;;
        *)
            if [ -z "$cpio" ]; then
                cpio=$(cd $(dirname $1) && pwd)/$(basename $1);
            elif [ -z "$disk" ]; then
                disk=$(cd $(dirname $1) && pwd)/$(basename $1);
	    else
	        echo "$NAME: too many arguments: $1"; return 1;
	    fi
	    shift;
            ;;
        esac
    done
   
    if [ ! -f "$cpio" -o ! -f "$disk" ]; then
    	help;
	return 1;
    fi

    work "$cpio" "$disk";

    if [ $? -ne 0 ]; then
    	echo "$NAME: bailing out because of errors";
	return 1;
    fi

    return 0;
}

main "$@";
exit $?;
