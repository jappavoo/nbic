#!/bin/bash

NAME=nbic
VERSION=0.1.0

function help()
{
    echo -e "\`$NAME' compiles cpio archives for netboot images\n" \
	    "\n"                                                   \
	    "Usage: $NAME -d DIR -o CPIO\n"                        \
	    " -?, --help      Show this help statement.\n"         \
	    "     --version   Show version statement.\n"           \
	    " -d, --dir DIR   Use DIR as input directory.\n"       \
	    " -o, --out CPIO  Create output archive CPIO.\n"       \
	    "\n"                                                   \
	    "Examples: $NAME -d linux.d -o ramfs.cpio\n";
}

function work()
{
    local dir=$1;
    local out=$2;
    local timestamp;
    local cpio;
    local trim;
    local testcase;

    out=$(cd $(dirname ./$out) && pwd)/$(basename $out);
    trim=$out.$$.d
    cpio=$out.$$.cpio
    timestamp=/tmp/nbic.timestamp.$$;
    raw=/tmp/nbic.raw.$$;
    final=/tmp/nbic.final.$$;
    testcase=/init;

    touch $timestamp &&
    sleep 1 &&
    sudo chroot $dir $testcase &&
    cd $dir &&
    sudo find . -anewer $timestamp > $raw &&
    echo "dev/console" >> $raw &&
    echo "proc" >> $raw &&
    cpio -o --quiet -H newc -O $cpio < $raw &&
    mkdir $trim &&
    cd $trim &&
    sudo cpio -id --quiet --no-absolute-filenames < $cpio &&
    sudo find . > $final &&
    sudo cpio -o --quiet -H newc -O $out < $final &&
    sudo rm $cpio $timestamp $raw $final &&
    sudo rm -r -f $trim || 
    return 1;

    return 0;
}

function main()
{
    local dir; local out;

    while [ $# -gt 0 ]; do
        case $1 in
        -\? | --help)
            help; return 1;
            ;;
        --version)
            echo "$NAME $VERSION"; return 1;
            ;;
        -d | --dir)
            shift; dir=$1; shift;
            ;;
        -o | --out)
            shift; out=$1; shift;
            ;;
        *)
	    echo "$NAME: bad argument: $1"; return 1;
            ;;
        esac
    done

    [ -z "$out" ] && out=$PWD/nbic.cpio;

    [ -d "$dir" -a -n "$out" ] || { help; return 1; }

    work $dir $out || { 
    	echo "$NAME: bailing out because of errors"; return 1;
    }

    return 0;
}

main "$@";
exit $?;
