#!/bin/bash

NAME=nbic
VERSION=0.2.3
EXCLUDES="usr/lib/locale|/usr/lib/gconv|var/log/lastlog|bash_history"
EXCLUDES="$EXCLUDES|usr/lib/locale|proc/|sys/"
INCLUDES="./init ./chroot ./mnt ./proc ./sys ./tmp ./dev ./var/tmp ./home"
INCLUDES="$INCLUDES ./var/lib ./var/lock ./var/log ./var/run ./var/run/sshd"
INCLUDES="$INCLUDES ./dev/console ./dev/loop0 ./dev/null ./dev/random"
INCLUDES="$INCLUDES ./dev/tty0 ./dev/tty1 ./dev/urandom ./dev/pts ./dev/ptmx"
INCLUDES="$INCLUDES ./dev/tty"
SAVE_TEMPS=0

function help()
{
    echo -e "\`$NAME' compiles cpio archives for netboot images\n"          \
        "\n"                                                                \
        "Usage: $NAME -d DIR [-l LIST] -o CPIO\n"                           \
        " -?, --help      Show this help statement.\n"                      \
        "     --version   Show version statement.\n"                        \
        " -d, --dir DIR   Use DIR as input directory.\n"                    \
        " -l, --list LIST Select files from LIST instead of tracing.\n"     \
        " -o, --out CPIO  Create output archive CPIO.\n"                    \
        "\n"                                                                \
        "Examples: $NAME -d linux -o ramfs.cpio\n"                          \
        "          $NAME -d linux -l bash.list -o ramfs.cpio\n";
}

function make_cpio_from_list()
{
    local dir=$1
    local out=$2
    local list=$3

    local trim=$(mktemp -d $out.d.XXXXXX)
    local cpio=$(mktemp $out.XXXXXX)
    local tmp=$(mktemp $out.list.XXXXXX)
    local final=$(mktemp $out.final.XXXXXX)
    local excludes="($EXCLUDES|^.$)"

    cd $dir || return 1;

    sudo find $INCLUDES -maxdepth 0 > $tmp 2> /dev/null

    sort $list $tmp | uniq > $final &&
    sudo cpio -o --quiet -H newc -O $cpio < $final &&
    cd $trim &&
    sudo cpio -id --quiet --no-absolute-filenames < $cpio ||
    return 1;

    sudo find . | egrep -v $excludes > $final

    sudo cpio -o --quiet -H newc -O $out < $final &&
    sudo chown $USER $out ||
    return 1;

    test $SAVE_TEMPS -eq 0 && {
        sudo rm $tmp &&
        sudo rm $final &&
        sudo rm $cpio &&
        sudo rm -r -f $trim || 
        return 1
    }

    return 0;
}

function work()
{
    local dir=$1;
    local out=$2;

    out=$(cd $(dirname $out) && pwd)/$(basename $out);
    local trim=$out.$$.d
    local cpio=$out.$$.cpio
    local stamp=/tmp/nbic.tamp.$$;
    local raw=/tmp/nbic.raw.$$;
    local final=/tmp/nbic.final.$$;

    touch $stamp &&
    sleep 1.0 &&
    nd $dir;

    cd $dir &&
    sudo find . -path ./proc -prune -o -anewer $stamp > $raw &&
    cd $OLDPWD || return 1;

    make_cpio_from_list $dir $out $raw || return 1;

    return 0;
}

function main()
{
    local dir;
    local list;
    local out;

    while [ $# -gt 0 ]; do
        case $1 in
        -\? | --help)
            help; return 1;
            ;;
        --version)
            echo "$NAME $VERSION"; return 1;
            ;;
        -d | --dir)
            shift; dir=$1; shift;
            ;;
        -l | --list)
            shift;
            list=$(cd $(dirname $1) && pwd)/$(basename $1);
            test -f $list || { help; return 1; }
            shift;
            ;;
        -o | --out)
            shift;
            out=$(cd $(dirname $1) && pwd)/$(basename $1);
            shift;
            ;;
        -save-temps)
            SAVE_TEMPS=1;
            shift;
            ;;
        *)
            echo "$NAME: bad argument: $1"; return 1;
            ;;
        esac
    done

    [ -z "$out" ] && out=$PWD/nbic.cpio;

    [ -d "$dir" -a -n "$out" ] || { 
        help; 
        return 1; 
    }

    if [ -f "$list" ]; then
        make_cpio_from_list $dir $out $list;
    else
        work $dir $out;
    fi

    if [ $? -ne 0 ]; then
        echo "$NAME: bailing out because of errors"; 
        return 1;
    fi

    return 0;
}

main "$@";
exit $?;
